----------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/todd/Documents/GitHub/ags_capital_vs_output/output/logs/1606_policy_eval.txt
  log type:  text
 opened on:   9 Jul 2019, 13:11:11

. ********************************************************************************
. 
. /*******************************************************************************
> DEFINE SAMPLE AND CLEAN PRICE DATA 
> ********************************************************************************/
. *RESTRICT SAMPLE
. use $repodir/generated_data/panel_reg_data, clear

. keep if insample_covars 
(32,194 observations deleted)

. egen maxyear = max(year), by(facilityid)

. keep if maxyear == 2014
(0 observations deleted)

. 
. *FILL IN MISSING PRICES WITH FACILITY AVERAGE PRICE IF AVAILABLE
. ****PRICE IS GOING TO BE RETAIL PRICE FOR RETAIL SALES AND RESALE PRICE OTHERWISE 
. 
. egen tk = mean(price_resale_EIA), by(facilityid)
(3572 missing values generated)

. replace price_resale_EIA = tk if price_resale_EIA == .
(11,666 real changes made)

. 
. *SOME FIRMS HAVE NON-RESALE SALES. 
. **GIVING THEM THE AVERAGE RETAIL PRICE IN STATE
. gen frac_resale = salesforresale /  totaldisposition
(3,439 missing values generated)

. replace frac_resale = 0 if totaldisp > 0 & totaldisp != . & frac_res == .
(0 real changes made)

. replace frac_resale = 1 if frac_resale > 1 & frac_resale != .
(24 real changes made)

. capture drop tk 

. egen tk = mean(frac_resale), by(facilityid)
(3040 missing values generated)

. replace frac_resale = tk if frac_resale == .
(399 real changes made)

. drop tk 

. 
. *RETAIL PRICES ARE CENTS PER KWH
. replace state_avg_price = state_avg_price*10
(34,395 real changes made)

. 
. gen avg_price = price_resale*frac_resale + (1-frac_resale)* state_avg_price
(3,572 missing values generated)

. replace avg_price = state_avg_price if frac_resale==0
(532 real changes made)

. 
. gen pmiss = cond(avg_price == . | avg_price == 0,1,0)

. egen npmiss = sum(pmiss), by(facilityid)

. bys facilityid: gen ni = _N

. gen pct_p_missing = npmiss/ni 

. drop pmiss npmiss 

. 
. *PARSE PPA PRICES
. gen price_disp_EIA = avg_price
(3,040 missing values generated)

. split pparate, parse(",") gen(tp_)
variables created as string: 
tp_1  tp_2  tp_3  tp_4  tp_5  tp_6

. destring tp_*, force replace
tp_1: all characters numeric; replaced as double
(20703 missing values generated)
tp_2: all characters numeric; replaced as double
(30082 missing values generated)
tp_3: all characters numeric; replaced as double
(32672 missing values generated)
tp_4: all characters numeric; replaced as double
(33362 missing values generated)
tp_5: all characters numeric; replaced as double
(33711 missing values generated)
tp_6: all characters numeric; replaced as double
(33980 missing values generated)

. egen pparate_max = rowmax(tp_*)
(20703 missing values generated)

. egen pparate_med = rowmedian(tp_*)
(20703 missing values generated)

. drop tp_*

. 
. order facilityid year month avg_price price_resale frac_resale salesforresale totaldis pparate

. sort facilityid year month

. save tempdat, replace
(note: file tempdat.dta not found)
file tempdat.dta saved

. 
. *GRAPHICALLY COMPARE EIA REVENUE ESTIMATES TO MATCHED PPAS
. ***MOST ARE ON THE 45 DEGREE LINE, SUGGESTING CONSISTENT. 
. use tempdat, clear

. collapse (mean) pparate_* price_* capacity_factor frac_resale, by(facilityid year)

. gen inppa = cond(pparate_max > 0 & pparate_max !=. , 1,0)

. tab inppa

      inppa |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      1,850       59.74       59.74
          1 |      1,247       40.26      100.00
------------+-----------------------------------
      Total |      3,097      100.00

. 
. la var price_disp_EIA "Average Price (EIA)"

. la var pparate_max "PPA Price" 

. twoway scatter price_resale pparate_max if inppa & year == 2014, ///
>         ytitle("Average Resale Price")

. graph export "$repodir/output/figures/resale_vs_ppa_price.png", replace
(file /Users/todd/Documents/GitHub/ags_capital_vs_output/output/figures/resale_vs_ppa_price.png written in
>  PNG format)

. graph close

. 
. /*******************************************************************************
> PREDICT LIFETIME GENERATION
> - CARRY 2014 WIND AND PRICE FORWARD (IN REAL TERMS)
> - ESTIMATE DECLINE CURVE ON OBSERVED DATA
> - THEN CALCULATE LIFETIME PROFITS BY COLLAPSING 
> ********************************************************************************/
. global nyears = 25 // expected lifetime

. 
. *EXPAND DATASET OUT TO FULL EXPECTED LIFETIME
. clear 

. local te = 12 * $nyears

. set obs `te'
number of observations (_N) was 0, now 300

. gen year = ceil(_n/12 -.01)

. gen month = _n -(year-1)*12

. replace year = year + 2014
(300 real changes made)

. gen fper = _n

. save tmdat, replace
(note: file tmdat.dta not found)
file tmdat.dta saved

. 
. use tempdat, clear

. egen avg_ptnl_cf_adj = mean(ptnl_cf_adj), by(facilityid)

. gen td = ptnl_cf_adj - avg_ptnl_cf_adj if year == 2014
(28,251 missing values generated)

. sum td, detail

                             td
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -23.94811      -29.41548
 5%    -19.24237      -28.95513
10%    -13.88509      -28.73631       Obs               6,144
25%    -7.451069      -28.53539       Sum of Wgt.       6,144

50%     1.403314                      Mean           1.636394
                        Largest       Std. Dev.      12.24526
75%       10.886       34.80675
90%     17.58445       36.08657       Variance       149.9464
95%     21.67846       36.10953       Skewness       .0083468
99%     27.84693       36.10953       Kurtosis       2.374953

. 
. keep if year == 2014
(28,251 observations deleted)

. egen maxage = max(age), by(facilityid)

. drop year 

. joinby month using tmdat

. replace age = maxage + fper
(153,600 real changes made)

. drop if age >= 12*$nyears
(34,407 observations deleted)

. gen future = 1

. 
. append using tempdat
(label pcurve_match already defined)

. replace future = 0 if future == . 
(34,395 real changes made)

. 
. replace age = age + 1
(153,588 real changes made)

. gen yage = ceil(age/12)

. save regdat, replace
(note: file regdat.dta not found)
file regdat.dta saved

. 
. **PREDICT FUTURE GENERATION
. use regdat, clear

. eststo clear

. 
. qui{

. label var yage "Age (years)"

. esttab, keep(*age* ) r2  lab

----------------------------------------------------
                              (1)             (2)   
                     Capacity F~r    log(Genera~)   
----------------------------------------------------
Age (years)                -1.048***      -0.0906***
                          (-6.72)        (-12.10)   
----------------------------------------------------
Observations                34395           34372   
R-squared                   0.621           0.954   
----------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. *EXPORT SUBSET FOR PRESENTATION
. esttab using "$outdir/tables/output_decay.tex" , ///
>         se noconstant nomtitles label star(* 0.10 ** 0.05 *** 0.01) replace  ///
>         keep(*age*)  nonotes compress booktabs b(a2) 
(output written to /Users/todd/Documents/GitHub/ags_capital_vs_output/output/tables/output_decay.tex)

. 
.                 
. *TABLE OF THE AVERAGE CAPACITY FACTORS PREDICTED BY AGE
. capture drop tk         

. gen tk = capacity_factor if future == 0
(119,193 missing values generated)

. egen cf_hat_avg = mean(tk), by(facilityid)

. replace cf_hat_avg = capacity_factor if future == 0
(34,395 real changes made)

. drop tk

. tabstat cf_hat* , by(yage) stat(mean)

Summary statistics: mean
  by categories of: yage (Age (years))

    yage |  cf_hat~f  cf_hat~n  cf_hat~g
---------+------------------------------
       1 |  31.32286  29.47851  29.60923
       2 |  31.72023  30.35824  32.45042
       3 |  32.08954  30.68719  32.98201
       4 |  32.10358  30.41688  32.85823
       5 |  31.91989  29.68344  32.56517
       6 |  31.83503  29.03122  32.59619
       7 |  31.41177  27.85085  32.59289
       8 |  30.86672  26.37829  32.40571
       9 |  30.14538  24.74427  32.40256
      10 |  29.27583  22.98242  32.38845
      11 |  28.38647  21.28545  32.34896
      12 |  27.38117  19.53318  32.28356
      13 |  26.34916  17.86635  32.28885
      14 |  25.30084  16.31849  32.28988
      15 |  24.25252  14.90473  32.28988
      16 |   23.2042  13.61345  32.28988
      17 |  22.15588  12.43404  32.28988
      18 |  21.10756  11.35681  32.28988
      19 |  20.05924  10.37291  32.28988
      20 |  19.01092  9.474246  32.28988
      21 |   17.9626   8.65344  32.28988
      22 |  16.91428  7.903745  32.28988
      23 |  15.86596     7.219  32.28988
      24 |  14.81764  6.593578  32.28988
      25 |  13.76932   6.02234  32.28988
---------+------------------------------
   Total |  25.16863  18.60561  32.29002
----------------------------------------

. 
. *PUT ALL CAPACITY FACTORS IN PERCENT
. foreach v of varlist cf* capacity_factor {
  2.         replace `v' = `v' / 100
  3.         replace `v' = 0 if `v' < 0 // linear spec drives some of these negative
  4. }
(153,588 real changes made)
(4,390 real changes made)
(153,588 real changes made)
(0 real changes made)
(153,565 real changes made)
(0 real changes made)
(153,565 real changes made)
(0 real changes made)

. save est_gen_data, replace
(note: file est_gen_data.dta not found)
file est_gen_data.dta saved

. 
. /*******************************************************************************
> *POLICY COUNTERFACTUALS FUNCTION TO:
> - PREDICT OUTPUT AND REVENUE EACH MONTH WITH AND WITHOUT PTC
> - ESTIMATE PROFITABILITY
> ********************************************************************************/
. 
. *FIRST DEFINE PROGRAM TO DO WORK, THEN SET ASSUMPTION PARAMETERS AND CALL THE PROGRAM
. capture program drop getprofits

. program define getprofits
  1.         *DEFINE LOCALS USING ARGUMENTS
.         local teffect           `1'
  2.         local r_public          `2'
  3.         local r_firm            `3'
  4.         local r_ptc                     `4'
  5.         local ptc_deflator      `5'
  6. 
.         use est_gen_data, clear
  7.         sort year month
  8.         order year month *price* pparate *rec*
  9. 
.         *DEFINE PRICE VARIABLES 
.         egen p_max = rowmax(price_disp_EIA pparate_max)
 10.         drop if p_max == . 
 11.         egen p_med = rowmax(price_disp_EIA pparate_med)
 12. 
.         *PICK WHICH PRICE TO USE
.         gen p = p_med 
 13. 
.         gen p_ptc = cond(yage <=10,`ptc_deflator'*23,0)
 14. 
.         *REC PRICES 
.         gen p_rec = cond(rec_price != .,rec_price,0)
 15.         gen p_rec_exp = cond(expected_rec != .,expected_rec,0)
 16.         * IOWA ALSO HAS A $15/mwh state level tax credit
.                 ** https://iub.iowa.gov/renewable-energy-tax-credits **
.         replace p_rec = p_rec + 15 if state =="IA" & yage <=10
 17.         replace p_rec_exp = p_rec_exp + 15 if state =="IA" & yage <=10
 18. 
.         *DEFINE CF, Q AND REVENUE VARIABLES (0=1603, 1 = PTC)
.         gen cf_1603 = capacity_factor
 19.         replace cf_1603 = cf_hat_regcf if year > 2014 
 20. 
.         gen cf_ptc = cf_1603 
 21.         replace cf_ptc = cf_1603 + `teffect' if yage <=10
 22. 
.         *CONVERT CF TO QUANTITIES
.                 **MONTHCAP IS TOTAL POSSIBLE HOURS IN MONTH AT FULL CAP
.         gen q_1603 = cf_1603 * monthcap
 23.         gen q_ptc = cf_ptc * monthcap
 24. 
.         *FIRM DISCOUNT FACTOR
.         gen df = 1/((1+`r_firm')^((age-1)/12)) // monthly
 25.         gen df_ptc = 1/((1+`r_ptc')^((age-1)/12)) // monthly
 26. 
.         *GET DISCOUNTED Q
.         gen dq_1603 = q_1603*df
 27.         gen dq_ptc = q_ptc*df
 28. 
.         *GET DISCOUNTED REVENUE BY STREAM
.         gen dr_op_1603 = p*q_1603*df
 29.         gen dr_op_ptc = p*q_ptc*df
 30.         gen dr_ptc_pmt = p_ptc*q_ptc*df_ptc
 31.         gen dr_rec_1603 = p_rec*q_1603*df
 32.         gen dr_rec_ptc = p_rec*q_ptc*df
 33.         gen dr_rec_exp_1603 = p_rec_exp*q_1603*df
 34.         gen dr_rec_exp_ptc = p_rec_exp*q_ptc*df
 35. 
.         *DISCOUNTED PUBLIC PTC OUTLAY
.         gen pubexp_ptc = q_ptc*(p_ptc/`ptc_deflator')/((1+`r_public')^((age-1)/12)) // monthly
 36. 
. 
.         **https://www.nrel.gov/docs/fy16osti/64281.pdf
.         * USING LBNL NUMBERS 
.         *2014 O&M baseline estimate of $9/MWh (Wiserand Bolinger 2015)
.         gen domcost_avg_1603 = 9*q_1603*df
 37.         gen domcost_avg_ptc = 9*q_ptc*df
 38. 
.         save longdata, replace
 39. 
.         /*******************************************************************************
>         *ESTIMATE PROFITABILITY
>         ********************************************************************************/
.         use longdata, clear
 40.         gen p_2014 = p if year == 2014
 41.         collapse (mean) p p_* cf_1603 cf_ptc df (firstnm) initial_cap = nameplate ///
>                 (sum) dr* domcost* dq_1603 dq_ptc q_1603 q_ptc pubexp_ptc, by(facilityid)
 42. 
.         gen dr_1603_tot = dr_op_1603 + dr_rec_exp_1603
 43.         gen dr_ptc_tot = dr_op_ptc + dr_ptc_pmt + dr_rec_exp_ptc
 44. 
.         gen dp_1603_tot = dr_1603_tot/ q_1603
 45.         gen dp_ptc_tot = dr_ptc_tot/ q_ptc
 46. 
.         *MERGE IN PLANT CHARACTERISTICS
.         merge 1:1 facilityid using $repodir/generated_data/static_reg_data, nogen keep(match)
 47. 
.         keep if flag_1603
 48.         di _N
 49. 
.         *GET CAPITAL COSTS FROM 1603 AWARD AMOUNTS
.                 *amount is in USD
.                 *so lcoe = $/MWh
.         gen investcost= amount_funded/.3 
 50.         *reduce invest cost by 10% for accelerated depreciation
.         gen capcost_ptc = investcost*.9
 51.         gen capcost_ptc_mw = capcost_ptc/initial_cap
 52.         gen capcost_1603 = investcost*.9*.7
 53.         gen capcost_1603_mw = capcost_ptc_mw*.7
 54. 
.         gen lcoe_1603 = capcost_1603/q_1603
 55.         gen lcoe_1603_om = (capcost_1603 + domcost_avg_1603)/q_1603
 56. 
.         gen profits_1603 = dr_1603_tot - capcost_1603 - domcost_avg_1603
 57.         gen profitable_1603 = cond(profits_1603 >=0 ,1,0)
 58. 
.         gen profits_ptc = dr_ptc_tot - capcost_ptc - domcost_avg_ptc
 59.         gen profitable_ptc = cond(profits_ptc >=0 ,1,0)
 60. 
.         capture drop sgroup
 61.         gen sgroup = "1603" if profitable_1603 ==1
 62.         replace sgroup = "1603 only" if profitable_1603 ==1 & profitable_ptc == 0
 63.         *replace sgroup = "PTC only" if profitable_1603 ==0 & profitable_ptc == 1
.         replace sgroup = "neither" if profitable_1603 ==0 & profitable_ptc == 0
 64. 
.         save profits_by_windfarm, replace
 65. end

. 
. *SET GLOBAL ASSUMPTION PARAMETERS
. eststo clear

. estimates use  "$outdir/estimates/rd_main_spec.ster" //IV estimate

. local te_iv = _b[flag_1603]

. estimates use  "$outdir/estimates/match_main_spec.ster" //IV estimate

. local te_match = _b[flag_1603]

. global teffect = -1*(`te_iv' + `te_match')/200

. 
. /*******************************************************************************
> -MAKE TABLE FOR PAPER
> *******************************************************************************/
. 
. *arguments: teffect, r_public, r_firm, r_ptc, ptc_deflator
. getprofits      $teffect .03 .05 .08 1          // baseline assumptions
(15000 missing values generated)
(15,000 observations deleted)
(3,840 real changes made)
(3,840 real changes made)
(107,233 real changes made)
(55,428 real changes made)
(note: file longdata.dta not found)
file longdata.dta saved
(133,044 missing values generated)
(label pcurve_match already defined)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               462  
    -----------------------------------------
(276 observations deleted)
186
(49 missing values generated)
variable sgroup was str4 now str9
(7 real changes made)
(47 real changes made)
(note: file profits_by_windfarm.dta not found)
file profits_by_windfarm.dta saved

. use profits_by_windfarm, clear

. 
. *GET COUNTS IN EACH GROUP FOR TEXT
. count if sgroup=="" // plants marginal to the PTC in always group
  2

. local tv = r(N)

. if (`tv'==1) local tv = "one"

. else if (`tv'==2) local tv = "two"

. else if (`tv'==3) local tv = "three"

. else if (`tv'==4) local tv = "four"

. else if (`tv'==5) local tv = "five"

. else if (`tv'==6) local tv = "six"

. else if (`tv'==7) local tv = "seven"

. else if (`tv'==8) local tv = "eight"

. else if (`tv'==9) local tv = "nine"

. file open myfile using "$repodir/output/estimates/ptcmarginal_group_num.tex", write text replace 

.         file write myfile "`tv'"

. file close myfile

. 
. replace sgroup="1603" if sgroup=="" // include plants marginal to the PTC in always group
(2 real changes made)

. 
. count if sgroup=="1603"
  132

. local tv = r(N)

. file open myfile using "$repodir/output/estimates/always_group_num.tex", write text replace 

.         file write myfile "`tv'"

. file close myfile

. 
. summ q_1603 if sgroup=="1603 only"

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      q_1603 |          7     2414520     2332964   315303.9    6727689

. local tv = round(r(N)*r(mean)/1000000)

. disp `tv'
17

. file open myfile using "$repodir/output/estimates/marginal_group_q.tex", write text replace 

.         file write myfile "`tv'"

. file close myfile

. 
. gen never = cond(sgroup == "neither",1,0)

. sum never, detail

                            never
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 186
25%            0              0       Sum of Wgt.         186

50%            0                      Mean           .2526882
                        Largest       Std. Dev.      .4357265
75%            1              1
90%            1              1       Variance       .1898576
95%            1              1       Skewness       1.138234
99%            1              1       Kurtosis       2.295576

. local tv = round(r(mean)*100)

. file open myfile using "$repodir/output/estimates/never_group_pct.tex", write text replace 

.         file write myfile "`tv'"

. file close myfile

. 
. count if sgroup=="1603 only"
  7

. local tv = r(N)

. if (`tv'==1) local tv = "one"

. else if (`tv'==2) local tv = "two"

. else if (`tv'==3) local tv = "three"

. else if (`tv'==4) local tv = "four"

. else if (`tv'==5) local tv = "five"

. else if (`tv'==6) local tv = "six"

. else if (`tv'==7) local tv = "seven"

. else if (`tv'==8) local tv = "eight"

. else if (`tv'==9) local tv = "nine"

. file open myfile using "$repodir/output/estimates/marginal_group_num.tex", write text replace 

.         file write myfile "`tv'"

. file close myfile

. 
. gen marginal = cond(sgroup == "1603 only",1,0)

. sum marginal, detail

                          marginal
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 186
25%            0              0       Sum of Wgt.         186

50%            0                      Mean           .0376344
                        Largest       Std. Dev.      .1908241
75%            0              1
90%            0              1       Variance       .0364138
95%            0              1       Skewness       4.859067
99%            1              1       Kurtosis       24.61053

. local tv = round(r(mean)*100)

. if (`tv'==1) local tv = "one"

. else if (`tv'==2) local tv = "two"

. else if (`tv'==3) local tv = "three"

. else if (`tv'==4) local tv = "four"

. else if (`tv'==5) local tv = "five"

. else if (`tv'==6) local tv = "six"

. else if (`tv'==7) local tv = "seven"

. else if (`tv'==8) local tv = "eight"

. else if (`tv'==9) local tv = "nine"

. file open myfile using "$repodir/output/estimates/marginal_group_pct.tex", write text replace 

.         file write myfile "`tv'"

. file close myfile

. 
. *MAKE TABLE
. *DEFINE PROGRAM HERE TO USE LATER FOR SENSITIVITY
. capture program drop makepolicyevaltable

. program define makepolicyevaltable
  1.         local filename `1'
  2.         use profits_by_windfarm, clear
  3.         replace sgroup="1603" if sgroup==""
  4.         capture drop nobs
  5.         gen nobs =1
  6. 
.         *NEED TO CALCULATE AVERAGE PUB EXP HERE (OTHERWISE ITS SIMPLE AVERAGE IN TABLE)
.         egen ggen = sum(dq_1603), by(sgroup)
  7.         egen gdol = sum(amount), by(sgroup)
  8.         gen plcoe_1603 = gdol/ggen
  9.         drop ggen gdol
 10.         egen ggen = sum(dq_ptc), by(sgroup)
 11.         egen gdol = sum(pubexp_ptc), by(sgroup)
 12.         gen plcoe_ptc = gdol/ggen
 13.         drop ggen gdol
 14. 
.         *CREATE LABELS THAT MATCH TEXT
.         gen slabel  = "Always Profitable"
 15.         replace slabel = "Marginal" if sgroup == "1603 only"
 16.         replace slabel = "Never Profitable" if sgroup == "neither"
 17. 
.         *convert units for table
.         foreach v of varlist q_* dq_* amount pubexp {
 18.                 replace `v' = `v'/1000000
 19.         }
 20.         tabout slabel using $repodir/output/tables/`filename'.tex, ///
>         c(sum nobs  sum q_1603 sum amount_funded mean plcoe_1603 ///
>                 sum q_ptc sum pubexp_ptc  mean plcoe_ptc) ///
>         f(0c 0c 0c 2 0c 0c 2) ///
>         rep sum ///
>         style(tex) bt ///
>         topf($repodir/code/analysis/top.tex) topstr(\textwidth) ptotal(none) total(none) botf($repodir/c
> ode/analysis/bot.tex) ///
>         h1(nil) ///
>         cl2(3-5 6-8) h2( & & \multicolumn{3}{c}{1603} & \multicolumn{3}{c}{PTC} \\ ) ///
>         h3(Group & N & Output (MMWh) & Subsidy (\textdollar M) & Subsidy (\textdollar/MWh) ///
>                 & Output (MMWh) & Subsidy (\textdollar M) & Subsidy (\textdollar/MWh) \\ )
 21. end

. 
. *CALL FUNCTION TO EXPORT TABLE
. makepolicyevaltable policyevaltab
(2 real changes made)
(7 real changes made)
(47 real changes made)
(186 real changes made)
(186 real changes made)
(186 real changes made)
(186 real changes made)
variable amount_funded was long now double
(186 real changes made)
(186 real changes made)

Table output written to: /Users/todd/Documents/GitHub/ags_capital_vs_output/output/tables/policyevaltab.te
> x

\begin{center}
\footnotesize
\newcolumntype{Y}{>{\raggedleft\arraybackslash}X}
\begin{tabularx} {\textwidth} {@{} l Y Y Y Y Y Y Y Y Y Y Y Y Y Y Y Y@{}} \\
\toprule
& & \multicolumn{3}{c}{1603} & \multicolumn{3}{c}{PTC} \\
\cmidrule(l{.75em}){3-5} \cmidrule(l{.75em}){6-8}
Group & N & Output (MMWh) & Subsidy (\textdollar M) & Subsidy (\textdollar/MWh) & Output (MMWh) & Subsidy 
> (\textdollar M) & Subsidy (\textdollar/MWh) \\
\midrule
Always Profitable&132&598&7,120&18.68&634&7,009&17.12 \\
Marginal&7&17&334&30.41&18&215&17.79 \\
Never Profitable&47&186&2,621&21.91&198&2,265&17.47 \\
\bottomrule
\addlinespace[.75ex]
\end{tabularx}
\par
\normalsize
%\scriptsize{\emph{Source: }#}
\end{center}

. 
. collapse (sum) nobs (sum) q_1603 (sum) dq_1603 (sum) amount_funded (mean) plcoe_1603 (sum) q_ptc (sum) d
> q_ptc (sum) pubexp_ptc (mean) plcoe_ptc, by(sgroup)

. save tempdat, replace
file tempdat.dta saved

. 
. *CALCULATE SUMMARY MEASURES FOR DRAFT TEXT
. use tempdat, clear

. gen assumption = "Marginal"

. 
. foreach v of varlist q_ptc dq_ptc pubexp_ptc {
  2.         replace `v' = . if sgroup == "1603 only"
  3.         replace `v' = . if sgroup == "neither"
  4. }
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)

. save sdat, replace
(note: file sdat.dta not found)
file sdat.dta saved

. 
. use tempdat, clear

. gen assumption = "Always"

. 
. foreach v of varlist q_ptc dq_ptc pubexp_ptc {
  2.         replace `v' = . if sgroup == "1603 only"
  3. }
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)

. append using sdat
(note: variable assumption was str6, now str8 to accommodate using data's values)

. 
. collapse (sum) q_* dq_* amount pubexp, by(assumption)

. 
. gen Q_diff = q_1603 - q_ptc

. gen Q_diff_pct = Q_diff/ q_ptc

. 
. gen C_diff = amount - pubexp_ptc

. gen C_diff_pct = C_diff/ pubexp_ptc

. 
. gen lcoe_1603 = amount/dq_1603

. gen lcoe_ptc = pubexp/dq_ptc

. 
. gen lcoe_diff = lcoe_1603 - lcoe_ptc

. gen lcoe_diff_pct = lcoe_diff/lcoe_ptc

. 
. replace Q_diff = round(Q_diff)
(2 real changes made)

. replace C_diff = round(C_diff)
(2 real changes made)

. 
. replace Q_diff_pct = round(Q_diff_pct*100)
(2 real changes made)

. replace C_diff_pct = round(C_diff_pct*100)
(2 real changes made)

. 
. replace lcoe_diff = round(lcoe_diff, .01)
(2 real changes made)

. replace lcoe_1603 = round(lcoe_1603, .01)
(2 real changes made)

. replace lcoe_ptc = round(lcoe_ptc, .01)
(2 real changes made)

. 
. replace lcoe_diff_pct = round(lcoe_diff_pct*100)
(2 real changes made)

. 
. save policy_sums, replace
(note: file policy_sums.dta not found)
file policy_sums.dta saved

. 
. *EXPORT TEX FILES WITH NUMBERS FOR DRAFT
. use policy_sums, clear

. sort assumption

. assert Q_diff[1] < 0

. 
. foreach v of varlist Q_* {
  2.         replace `v' = -`v' if _n == 1
  3. }
(1 real change made)
(1 real change made)

. 
. *VARS WITH NO DECIMALS IN TEXT
. foreach v of varlist Q_diff* C_diff* lcoe_diff_pct {
  2.         local tlab = "Always"
  3.         local tv = trim("`: display %10.0fc `v'[1]'") // FC ADDS COMMAS
  4.         di `tv'
  5. 
.         di "`v' - `tlab'  =   `tv'"
  6. 
.         file open myfile using "$repodir/output/estimates/pe_`tlab'_`v'.tex", write text replace 
  7.         file write myfile "`tv'"
  8.         file close myfile
  9. 
.         local tlab = "Marginal"
 10.         local tv = trim("`: display %10.0fc `v'[2]'")
 11.         di `tv'
 12.         di "`v' - `tlab'  =   `tv'"
 13. 
.         file open myfile using "$repodir/output/estimates/pe_`tlab'_`v'.tex", write text replace 
 14.         file write myfile "`tv'"
 15.         file close myfile
 16. }
31
Q_diff - Always  =   31
167
Q_diff - Marginal  =   167
4
Q_diff_pct - Always  =   4
26
Q_diff_pct - Marginal  =   26
801
C_diff - Always  =   801
3 66
C_diff - Marginal  =   3,066
9
C_diff_pct - Always  =   9
44
C_diff_pct - Marginal  =   44
14
lcoe_diff_pct - Always  =   14
15
lcoe_diff_pct - Marginal  =   15

. 
. *VARS WITH 2 DECIMALS IN TEXT
. foreach v of varlist lcoe_diff lcoe_1603 lcoe_ptc {
  2.         local tlab = "Always"
  3.         local tv = trim("`: display %10.2fc `v'[1]'") // FC ADDS COMMAS
  4.         di `tv'
  5. 
.         di "`v' - `tlab'  =   `tv'"
  6. 
.         file open myfile using "$repodir/output/estimates/pe_`tlab'_`v'.tex", write text replace 
  7.         file write myfile "`tv'"
  8.         file close myfile
  9. 
.         local tlab = "Marginal"
 10.         local tv = trim("`: display %10.2fc `v'[2]'")
 11.         di `tv'
 12.         di "`v' - `tlab'  =   `tv'"
 13. 
.         file open myfile using "$repodir/output/estimates/pe_`tlab'_`v'.tex", write text replace 
 14.         file write myfile "`tv'"
 15.         file close myfile
 16. }
2.48
lcoe_diff - Always  =   2.48
2.57
lcoe_diff - Marginal  =   2.57
19.69
lcoe_1603 - Always  =   19.69
19.69
lcoe_1603 - Marginal  =   19.69
17.2
lcoe_ptc - Always  =   17.20
17.12
lcoe_ptc - Marginal  =   17.12

. 
. 
. /*******************************************************************************
> -MAKE TABLES FOR SENSITIVITY
> *******************************************************************************/
. * getprofits arguments: teffect, r_public, r_firm, r_ptc, ptc_deflator
. 
. * baseline assumptions
. *qui: getprofits        $teffect .03 .05 .08  1
. 
. * peak tax equity rate
. qui: getprofits         $teffect .03 .05 .105 1

. qui: makepolicyevaltable policyevaltab_rptchigh // argument is filename for output

. 
. * scale nominal ptc value by 0.85 per johnston (2019), use 0.05 to discount ptc
. qui: getprofits         $teffect .03 .05 .105 0.85

. tab sgroup, miss

     sgroup |      Freq.     Percent        Cum.
------------+-----------------------------------
       1603 |        126       67.74       67.74
  1603 only |         11        5.91       73.66
    neither |         49       26.34      100.00
------------+-----------------------------------
      Total |        186      100.00

. qui: makepolicyevaltable policyevaltab_ptcdeflated // argument is filename for output

. 
. ********************************************************************************
. tempsetup
/Users/todd/Documents/GitHub/ags_capital_vs_output/temp

. capture log close
